---
interface Props {
    lang: string;
    links: any;
}
import { Icon } from "astro-icon";
import LanguagePicker from "./LanguagePicker.astro"; 

const {lang, links} = Astro.props
---

<div class="modal micromodal-slide" id="modal-1" aria-hidden="true">
    <div class="modal__overlay" tabindex="-1" data-micromodal-close>
        <div class="modal__container" role="dialog" aria-modal="true" aria-labelledby="modal-1-title">
            <header class="modal__header">
                <div class="header-logo">
                    <a href=`/${lang}`>
                        <img src="../../logo.svg" alt="">
                    </a>
                </div>
                <div class="close-btn">
                    <Icon pack="mdi" name="close-circle-outline" data-micromodal-close/>
                </div>
            </header>

            <div class="modal__content">
                <div class="links">
                    {
                        Object.keys(links).map((link) => (
                            <a class="h1 text-primary link-text link" href={links[link]}>{link}</a>
                        ))
                    }
                </div>
                <a href=`/${lang}/#contact`>
                    <button  class="button-secondary main-text" id="contact-btn">
                        {lang === 'en' ? 'Contact us' : 'Cont√°ctanos'}
                    </button>
                </a>
            </div>
        </div>
    </div>
</div>
  
<button class="external" data-micromodal-trigger="modal-1">
    <Icon pack="mdi" name="dots-horizontal"/>
</button>

<style>
    .modal__overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.75);
        width: 100%;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index:10;
    }

    .modal__container {
        background-color: #fff;
        padding: 30px;
        height: 100vh;
        width: 100vw;
        overflow-y: auto;
        box-sizing: border-box;
    }



    .modal__header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 80px;
    }
    .close-btn {
        cursor: pointer;
        display: grid;
        place-items: center;
        width: 40px;
        height: 40px;
    }
    .close-btn svg {
        color: var(--primary);
        transition: .1s ease;
    }
    .close-btn svg:hover {
        color: var(--secondary);
    }
    .header-logo {
        justify-self: center;
        align-self: center;
    }
    .header-logo a img {
        height: 60px;
    }

    .link {
        margin-bottom: 20px!important;
        text-align: center;
    }
    .modal__header .modal__close:before { content: "\2715"; }

    .modal__content {
        height: 500px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-top: 10px;
        margin-bottom: 10px;
        color: rgba(0,0,0,.8);
    }


    .modal__btn {
    font-size: .875rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    background-color: #e6e6e6;
    color: rgba(0,0,0,.8);
    border-radius: .25rem;
    border-style: none;
    border-width: 0;
    cursor: pointer;
    -webkit-appearance: button;
    text-transform: none;
    overflow: visible;
    line-height: 1.15;
    margin: 0;
    will-change: transform;
    -moz-osx-font-smoothing: grayscale;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    transition: -webkit-transform .25s ease-out;
    transition: transform .25s ease-out;
    transition: transform .25s ease-out,-webkit-transform .25s ease-out;
    }

    .modal__btn-primary {
    background-color: #00449e;
    color: #fff;
    }

    /**************************
    Demo Animation Style
    **************************/

    @keyframes mmfadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes mmfadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }

    @keyframes mmslideIn {
    from { transform: translateY(15%); }
        to { transform: translateY(0); }
    }

    @keyframes mmslideOut {
        from { transform: translateY(0); }
        to { transform: translateY(15%); }
    }

    .micromodal-slide {
    display: none;
    }

    .micromodal-slide.is-open {
    display: block;
    }

    .micromodal-slide[aria-hidden="false"] .modal__overlay {
    animation: mmfadeIn .3s cubic-bezier(0.0, 0.0, 0.2, 1);
    }

    .micromodal-slide[aria-hidden="false"] .modal__container {
    animation: mmslideIn .3s cubic-bezier(0, 0, .2, 1);
    }

    .micromodal-slide[aria-hidden="true"] .modal__overlay {
    animation: mmfadeOut .3s cubic-bezier(0.0, 0.0, 0.2, 1);
    }

    .micromodal-slide[aria-hidden="true"] .modal__container {
    animation: mmslideOut .3s cubic-bezier(0, 0, .2, 1);
    }

    .micromodal-slide .modal__container,
    .micromodal-slide .modal__overlay {
    will-change: transform;
    }

    .modal__container button {
        outline: none;
        cursor: pointer !important;
    }

    .modal__container h2.modal__title {
        color: #595959;
    }

    .modal__title {
    margin-top: 0;
    margin-bottom: 0;
    font-weight: 600;
    font-size: 1.25rem;
    line-height: 1.25;
    color: #00449e;
    box-sizing: border-box;
    }

    .modal__close {
    font-size: 24px;
    }

    .modal__content {
    margin-top: 2rem;
    margin-bottom: 2rem;
    line-height: 1.5;
    color: rgba(0,0,0,.8);
    }

    .modal__btn {
    padding: 10px 15px;
    background-color: #e6e6e6;
    border-radius: 4px;
    -webkit-appearance: none;
    }
    button.external {
        width: 50px;
        height: 40px;
        border: none;
        background: none;
        cursor: pointer;
        display: grid;
        place-items: center;
    }
    .external svg {
        color: var(--primary);
        transition: .1s ease;
    }
    .external svg:hover {
        color: var(--secondary);
    }

    .other-links {
    padding: 5px;
    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir,
        helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;
    }

    .other-links h2 {
    font-size: 12px;
    }

    .other-links a {
    font-size: 12px;
    }
</style>
<script>
    import MicroModal from 'micromodal';
    document.addEventListener("DOMContentLoaded", function() {
    
    try {
        
        MicroModal.init({
        awaitCloseAnimation: true,// set to false, to remove close animation
        });
        
    } catch (e) {
        console.log("micromodal error: ", e);
    }
    
    });

    const contactAndClose = document.getElementById('contact-btn');

    contactAndClose.addEventListener('click', () => {
        MicroModal.close('modal-1')
    })

    const links = document.querySelectorAll('.link');

    links.forEach(link => {
        link.addEventListener('click', () => {

            setTimeout(()=> {
                MicroModal.close('modal-1')
            }, 1100)
        })
    })


</script>