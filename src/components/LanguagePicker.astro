---
interface Props {
  selected: string;
}

const { selected } = Astro.props;

const notSelected = selected === "en" ? "es" : "en";

const languages = {
    es: "Espa√±ol",
    en: "English",
}

const page = Astro.url.pathname.split("/")[2]

---
<div class="lang-picker">
  <select name="lang-selector" class="main-text" id="lang-selector">
    <option value=`${selected} ` class="opt main-text" selected>{selected.toUpperCase()}</option>
    <option value=`${notSelected} ` class="opt main-text">{notSelected.toUpperCase()}</option>
  </select>
</div>

<script>
  // check if its server side
  if (typeof window !== "undefined") {
    let route = window.location.pathname;
    if (route === "/en/" || route === "/es/") {
      route = "/";
    }
    route = route[0] + route.slice(4)
    console.log(route);
    const selector: HTMLSelectElement = document.getElementById("lang-selector");

    selector.addEventListener("change", (e) => {
      const selectedLang = selector.value;
      const url = `/${selectedLang}${route}`;
      console.log(url);
      window.location.replace(url);
    })
  }
</script>

<style>
  #lang-selector {
    height: 30px;
    width: 60px;
    font-family: "Raleway", sans-serif;
    font-size: 1.2rem;
    border: 1px solid var(--primary);
    border-radius: 12px;
    padding: 0 5px;
    color: var(--primary);
    cursor: pointer;
    transition: all 0.3s ease-in-out;
  }
  #lang-selector:focus {
    outline: none;
  }
  #lang-selector:hover, #lang-selector:focus {
      border-radius: 2px;
  }
  
</style>