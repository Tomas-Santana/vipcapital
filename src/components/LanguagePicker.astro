---
interface Props {
  selected: string;
}

const { selected } = Astro.props;

const notSelected = selected === "en" ? "es" : "en";

import { Icon } from 'astro-icon';


const languages = {
    es: "Espa√±ol",
    en: "English",
}

const page = Astro.url.pathname.split("/")[2]

---
<div class="lang-picker">
  <div class="selected">
    <span>{ selected.toUpperCase() }</span>
  </div>
  <Icon class="icon" name="arrow-right-thin" pack="mdi"/>
  <div class="not-selected">
    <span class="link-text">{ notSelected.toUpperCase() }</span>
  </div>
</div>

<script>
  // check if its server side
  if (typeof window !== "undefined") {
    let route = window.location.pathname;
    
    const thisLang = route.slice(1, 3);
    console.log(thisLang);
    const notThisLang = thisLang === "en" ? "es" : "en";
    route = route[0] + route.slice(4)
    console.log(route);
    
    const langSelector = document.querySelector(".lang-picker");
    const selected = document.querySelector(".selected");
    const notSelected = document.querySelector(".not-selected");
    langSelector.addEventListener("click", () => {
      notSelected.classList.toggle("visible");
      langSelector.classList.toggle("keep-pos");
      const icon = document.querySelector(".icon");
      icon.classList.toggle("zero");
    });

    // close when click outside
    

    notSelected.addEventListener("click", () => {
      const langRoute = `/${notThisLang}${route}`;
      window.location.replace(langRoute);
    })
  }
</script>

<style>
  .lang-picker {
    font-family: "Raleway", sans-serif;
    font-size: 1.2rem;
    border: 1px solid var(--primary);
    border-radius: 12px;
    padding: 0 5px;
    color: white;
    background-color: var(--primary);
    cursor: pointer;
    display: flex;
    flex-direction: row;
    gap: 0px;
    align-items: center;
  }
  #lang-selector:focus {
    outline: none;
  }
  #lang-selector:hover, #lang-selector:focus {
      border-radius: 2px;
  }
  .selected {
  }
  .not-selected {
    display: none;
    transition: all 0.3s ease-in-out;
  }

  .keep-pos {
    transform: translateX(12px);
  }
  .icon {
    height: 25px;
    width: 20px;
    transform: rotate(90deg);
    transition: all 0.1s ease-in-out;
  }
  .zero {
    transform: rotate(0deg);
  }
  .lang-picker:hover .icon {
    transform: rotate(0deg);
  }
  .visible {
    display: block;
  }
</style>